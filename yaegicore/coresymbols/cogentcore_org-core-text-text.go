// Code generated by 'yaegi extract github.com/MobinYengejehi/core/text/text'. DO NOT EDIT.

package coresymbols

import (
	"github.com/MobinYengejehi/core/text/text"
	"reflect"
)

func init() {
	Symbols["github.com/MobinYengejehi/core/text/text/text"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AlignsN":           reflect.ValueOf(text.AlignsN),
		"AlignsValues":      reflect.ValueOf(text.AlignsValues),
		"Center":            reflect.ValueOf(text.Center),
		"End":               reflect.ValueOf(text.End),
		"Justify":           reflect.ValueOf(text.Justify),
		"NewFont":           reflect.ValueOf(text.NewFont),
		"NewStyle":          reflect.ValueOf(text.NewStyle),
		"Start":             reflect.ValueOf(text.Start),
		"WhiteSpacePre":     reflect.ValueOf(text.WhiteSpacePre),
		"WhiteSpacePreWrap": reflect.ValueOf(text.WhiteSpacePreWrap),
		"WhiteSpacesN":      reflect.ValueOf(text.WhiteSpacesN),
		"WhiteSpacesValues": reflect.ValueOf(text.WhiteSpacesValues),
		"WrapAlways":        reflect.ValueOf(text.WrapAlways),
		"WrapAsNeeded":      reflect.ValueOf(text.WrapAsNeeded),
		"WrapNever":         reflect.ValueOf(text.WrapNever),
		"WrapSpaceOnly":     reflect.ValueOf(text.WrapSpaceOnly),

		// type definitions
		"Aligns":         reflect.ValueOf((*text.Aligns)(nil)),
		"EditorSettings": reflect.ValueOf((*text.EditorSettings)(nil)),
		"Font":           reflect.ValueOf((*text.Font)(nil)),
		"Style":          reflect.ValueOf((*text.Style)(nil)),
		"WhiteSpaces":    reflect.ValueOf((*text.WhiteSpaces)(nil)),
	}
}
