// Code generated by 'yaegi extract github.com/MobinYengejehi/core/htmlcore'. DO NOT EDIT.

package coresymbols

import (
	"github.com/MobinYengejehi/core/htmlcore"
	"reflect"
)

func init() {
	Symbols["github.com/MobinYengejehi/core/htmlcore/htmlcore"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BindTextEditor":     reflect.ValueOf(&htmlcore.BindTextEditor).Elem(),
		"ExtractText":        reflect.ValueOf(htmlcore.ExtractText),
		"ExtractTextExclude": reflect.ValueOf(htmlcore.ExtractTextExclude),
		"Get":                reflect.ValueOf(htmlcore.Get),
		"GetAttr":            reflect.ValueOf(htmlcore.GetAttr),
		"GetURLFromFS":       reflect.ValueOf(htmlcore.GetURLFromFS),
		"GoDocWikilink":      reflect.ValueOf(htmlcore.GoDocWikilink),
		"HasAttr":            reflect.ValueOf(htmlcore.HasAttr),
		"MDGetAttr":          reflect.ValueOf(htmlcore.MDGetAttr),
		"MDSetAttr":          reflect.ValueOf(htmlcore.MDSetAttr),
		"NewContext":         reflect.ValueOf(htmlcore.NewContext),
		"ReadHTML":           reflect.ValueOf(htmlcore.ReadHTML),
		"ReadHTMLString":     reflect.ValueOf(htmlcore.ReadHTMLString),
		"ReadMD":             reflect.ValueOf(htmlcore.ReadMD),
		"ReadMDString":       reflect.ValueOf(htmlcore.ReadMDString),

		// type definitions
		"Context":         reflect.ValueOf((*htmlcore.Context)(nil)),
		"WikilinkHandler": reflect.ValueOf((*htmlcore.WikilinkHandler)(nil)),
	}
}
