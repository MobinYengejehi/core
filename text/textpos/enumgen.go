// Code generated by "core generate"; DO NOT EDIT.

package textpos

import (
	"github.com/MobinYengejehi/core/enums"
)

var _AdjustPosDelValues = []AdjustPosDel{0, 1, 2}

// AdjustPosDelN is the highest valid value for type AdjustPosDel, plus one.
const AdjustPosDelN AdjustPosDel = 3

var _AdjustPosDelValueMap = map[string]AdjustPosDel{`AdjustPosDelErr`: 0, `AdjustPosDelStart`: 1, `AdjustPosDelEnd`: 2}

var _AdjustPosDelDescMap = map[AdjustPosDel]string{0: `AdjustPosDelErr means return a PosErr when in deleted region.`, 1: `AdjustPosDelStart means return start of deleted region.`, 2: `AdjustPosDelEnd means return end of deleted region.`}

var _AdjustPosDelMap = map[AdjustPosDel]string{0: `AdjustPosDelErr`, 1: `AdjustPosDelStart`, 2: `AdjustPosDelEnd`}

// String returns the string representation of this AdjustPosDel value.
func (i AdjustPosDel) String() string { return enums.String(i, _AdjustPosDelMap) }

// SetString sets the AdjustPosDel value from its string representation,
// and returns an error if the string is invalid.
func (i *AdjustPosDel) SetString(s string) error {
	return enums.SetString(i, s, _AdjustPosDelValueMap, "AdjustPosDel")
}

// Int64 returns the AdjustPosDel value as an int64.
func (i AdjustPosDel) Int64() int64 { return int64(i) }

// SetInt64 sets the AdjustPosDel value from an int64.
func (i *AdjustPosDel) SetInt64(in int64) { *i = AdjustPosDel(in) }

// Desc returns the description of the AdjustPosDel value.
func (i AdjustPosDel) Desc() string { return enums.Desc(i, _AdjustPosDelDescMap) }

// AdjustPosDelValues returns all possible values for the type AdjustPosDel.
func AdjustPosDelValues() []AdjustPosDel { return _AdjustPosDelValues }

// Values returns all possible values for the type AdjustPosDel.
func (i AdjustPosDel) Values() []enums.Enum { return enums.Values(_AdjustPosDelValues) }

// MarshalText implements the [encoding.TextMarshaler] interface.
func (i AdjustPosDel) MarshalText() ([]byte, error) { return []byte(i.String()), nil }

// UnmarshalText implements the [encoding.TextUnmarshaler] interface.
func (i *AdjustPosDel) UnmarshalText(text []byte) error {
	return enums.UnmarshalText(i, text, "AdjustPosDel")
}
